package com.example.player.platform

import com.example.player.domain.model.PlaybackState
import com.example.player.presentation.mvi.PlaybackIntent
import kotlinx.coroutines.flow.Flow

/**
 * A common interface for managing platform-specific media notifications
 * (like the Android notification).
 */
interface MediaNotificationManager {
    /**
     * A flow of intents generated by user interaction with the notification controls.
     */
    val events: Flow<PlaybackIntent>

    /**
     * Creates and shows a media notification, or updates an existing one.
     * @param state The latest playback state to display.
     */
    fun showOrUpdate(state: PlaybackState)

    /**
     * Dismisses and cleans up the notification.
     */
    fun dismiss()
}

/**
 * An expect factory function to get the platform-specific implementation.
 */
expect fun createMediaNotificationManager(platformContext: PlatformContext): MediaNotificationManager